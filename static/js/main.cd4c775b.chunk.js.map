{"version":3,"sources":["Button.module.css","components/movie.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["module","exports","Movie","medium_cover_image","title","summary","genres","id","src","alt","to","map","g","prototype","PropType","string","isRequired","arrayOf","number","Home","useState","loading","setLoading","movies","setMovies","getMovies","a","fetch","json","data","useEffect","console","log","movie","Detail","useParams","getMovie","App","basename","process","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,IAAM,sB,+ICExB,SAASC,EAAT,GAA+D,IAA/CC,EAA8C,EAA9CA,mBAAoBC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,QAAQC,EAAY,EAAZA,OAAQC,EAAI,EAAJA,GACtD,OACI,gCACA,qBAAKC,IAAKL,EAAoBM,IAAKL,IACnC,6BAAI,cAAC,IAAD,CAAMM,GAAE,iBAAYH,GAApB,SAA2BH,MAC/B,4BAAIC,IACJ,6BACKC,EAAOK,KAAI,SAACC,YAQzBV,EAAMW,UAAY,CACdV,mBAAoBW,IAASC,OAAOC,WACpCZ,MAAOU,IAASC,OAAOC,WACvBX,QAASS,IAASC,OAAOC,WACzBV,OAAQQ,IAASG,QAAQH,IAASC,QAAQC,WAC1CT,GAAIO,IAASI,OAAOF,YAGTd,QCQAiB,MA/Bf,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACF,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAS,uCAAG,4BAAAC,EAAA,sEAERC,MAAK,0EAFG,8BAKdC,OALc,OACVA,EADU,OAMdJ,EAAUI,EAAKC,KAAKN,QACpBD,GAAW,GAPG,2CAAH,qDAaf,OAJAQ,qBAAU,WACRL,MACC,IACHM,QAAQC,IAAIT,GAEV,8BACGF,EAAY,4CAAsB,8BAAME,EAAOZ,KAAI,SAACsB,GAAD,OAClD,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVJ,mBAAoB8B,EAAM9B,mBAC1BC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAM3B,QALT2B,EAAM1B,YCRN2B,MAZf,WACI,IAAO3B,EAAM4B,cAAN5B,GACD6B,EAAQ,uCAAG,sBAAAV,EAAA,sEAEHC,MAAM,mDAAD,OAAoDpB,IAFtD,8BAGXqB,OAHW,yDAAH,qDAQd,OAHAE,qBAAU,WACNM,MACD,IACI,yCCIIC,MATf,WACE,OAAO,cAAC,IAAD,CAAQC,SAAUC,aAAlB,SACL,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,Y,MCRxCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cd4c775b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1uuCO\"};","import PropType from \"prop-types\";\nimport {Link} from \"react-router-dom\";/* link는 페이지 새로고침없이 전환되는 함수?이다.*/\n\nfunction Movie({medium_cover_image, title,summary,genres, id}){\n    return (\n        <div>\n        <img src={medium_cover_image} alt={title} />\n        <h2><Link to={`/movie/${id}`}>{title}</Link></h2>\n        <p>{summary}</p>\n        <ul>\n            {genres.map((g) =>{\n                <li key={g}>{g}</li>\n            })}\n        </ul>\n    </div>\n    );\n}\n\nMovie.prototype = {\n    medium_cover_image: PropType.string.isRequired,\n    title: PropType.string.isRequired,\n    summary: PropType.string.isRequired,\n    genres: PropType.arrayOf(PropType.string).isRequired,\n    id: PropType.number.isRequired,\n}\n\nexport default Movie;","import {useEffect, useState} from \"react\";\nimport Movie from \"../components/movie\";\n\nfunction Home() {\n    const [loading, setLoading] = useState(true);\n  const [movies, setMovies  ] = useState([]);\n  const getMovies = async () =>{\n    const json = await(\n      await fetch (\n          `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n      )\n    ).json();\n      setMovies(json.data.movies);\n      setLoading(false);\n  }\n  useEffect(() => {\n    getMovies();\n  }, []);\n  console.log(movies);\n  return (\n    <div> \n      {loading ?   <h1>Loading...</h1> : <div>{movies.map((movie) =>(\n        <Movie \n          key={movie.id}\n          id={movie.id}\n          medium_cover_image={movie.medium_cover_image} \n          title={movie.title} \n          summary={movie.summary} \n          genres={movie.genres}\n        />\n      ))}</div>}\n    </div> \n  );\n}\nexport default Home;","import { useEffect } from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nfunction Detail() {\n    const {id} = useParams();\n    const getMovie = async() => {\n        const json = await (\n            await fetch(`https://yts.mx/api/v2/list_movies.json?movie_id=${id}`) \n        ).json();\n    }\n    useEffect(() =>{\n        getMovie();\n    }, []);\n    return <h1>Detail</h1>\n}\nexport default Detail;","import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n}from  \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\n\nfunction App() {\n  return <Router basename={process.env.PUBLIC_URL}>\n    <Routes>\n      <Route path=\"/\" element={<Home />} ></Route>\n      <Route path=\"/movie/:id\" element={<Detail />} ></Route>\n    </Routes  >\n  </Router>;\n}\n \nexport default App;\n \n/*\nNPM은 패키지 관리자이며 NPM을 사용하여 node.js 패키지를 설치할 수 있습니다\n\nNPX는 node.js 패키지를 실행하는 도구입니다.\n*/ ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./Button.module.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}